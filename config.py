# -*- coding: utf-8 -*-
import os
from dotenv import load_dotenv
from typing import List, Set

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env —Ñ–∞–π–ª–∞ (–ª–æ–∫–∞–ª—å–Ω–æ)
load_dotenv()

class Config:
    # ============= –û–°–ù–û–í–ù–´–ï –ù–ê–°–¢–†–û–ô–ö–ò =============
    
    # Telegram Bot Token - –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–´–ô
    BOT_TOKEN = os.getenv("BOT_TOKEN")
    
    # ============= –ö–ê–ù–ê–õ–´ –ò –ì–†–£–ü–ü–´ =============
    
    # –û—Å–Ω–æ–≤–Ω—ã–µ –∫–∞–Ω–∞–ª—ã (–∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–≤–æ–∏ ID)
    TARGET_CHANNEL_ID = int(os.getenv("TARGET_CHANNEL_ID", "-1002743668534"))
    MODERATION_GROUP_ID = int(os.getenv("MODERATION_GROUP_ID", "-1002734837434")) 
    CHAT_FOR_ACTUAL = int(os.getenv("CHAT_FOR_ACTUAL", "-1002734837434"))
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–∞–Ω–∞–ª—ã
    TRADE_CHANNEL_ID = int(os.getenv("TRADE_CHANNEL_ID", "-1003033694255"))
    
    # –°—Å—ã–ª–∫–∏ –Ω–∞ –∫–∞–Ω–∞–ª—ã
    BUDAPEST_CHANNEL = os.getenv("BUDAPEST_CHANNEL", "https://t.me/snghu")
    BUDAPEST_CHAT = os.getenv("BUDAPEST_CHAT", "https://t.me/tgchatxxx")
    CATALOG_CHANNEL = os.getenv("CATALOG_CHANNEL", "https://t.me/trixvault")
    TRADE_CHANNEL = os.getenv("TRADE_CHANNEL", "https://t.me/hungarytrade")
    
    # ============= –ë–ê–ó–ê –î–ê–ù–ù–´–• =============
    
    # –î–ª—è Railway - –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è DATABASE_URL
    DATABASE_URL = os.getenv("DATABASE_URL", "sqlite:///./trixbot.db")
    
    # ============= –ü–†–ê–í–ê –î–û–°–¢–£–ü–ê =============
    
    # –ê–¥–º–∏–Ω—ã (–ó–ê–ú–ï–ù–ò–¢–ï –ù–ê –°–í–û–ò TELEGRAM ID)
    ADMIN_IDS_STR = os.getenv("ADMIN_IDS", "7811593067")
    ADMIN_IDS: Set[int] = set()
    
    # –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä—ã
    MODERATOR_IDS_STR = os.getenv("MODERATOR_IDS", "")
    MODERATOR_IDS: Set[int] = set()
    
    @classmethod
    def _init_ids(cls):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è ID –∞–¥–º–∏–Ω–æ–≤ –∏ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤"""
        # –ü–∞—Ä—Å–∏–º –∞–¥–º–∏–Ω–æ–≤
        if cls.ADMIN_IDS_STR:
            try:
                cls.ADMIN_IDS = set(
                    int(id_str.strip()) 
                    for id_str in cls.ADMIN_IDS_STR.split(",") 
                    if id_str.strip().isdigit()
                )
            except (ValueError, AttributeError):
                cls.ADMIN_IDS = set()
        
        # –ü–∞—Ä—Å–∏–º –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤
        if cls.MODERATOR_IDS_STR:
            try:
                cls.MODERATOR_IDS = set(
                    int(id_str.strip()) 
                    for id_str in cls.MODERATOR_IDS_STR.split(",") 
                    if id_str.strip().isdigit()
                )
            except (ValueError, AttributeError):
                cls.MODERATOR_IDS = set()
    
    # ============= –ù–ê–°–¢–†–û–ô–ö–ò –ö–£–õ–î–ê–£–ù–û–í =============
    
    COOLDOWN_SECONDS = int(os.getenv("COOLDOWN_SECONDS", "3600"))  # 1 —á–∞—Å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    
    # ============= –ê–í–¢–û–ü–û–°–¢–ò–ù–ì =============
    
    SCHEDULER_MIN_INTERVAL = int(os.getenv("SCHEDULER_MIN", "120"))
    SCHEDULER_MAX_INTERVAL = int(os.getenv("SCHEDULER_MAX", "160"))
    SCHEDULER_ENABLED = os.getenv("SCHEDULER_ENABLED", "false").lower() == "true"
    
    # ============= –°–û–û–ë–©–ï–ù–ò–Ø –ü–û –£–ú–û–õ–ß–ê–ù–ò–Æ =============
    
    DEFAULT_SIGNATURE = os.getenv("DEFAULT_SIGNATURE", "ü§ñ @TrixLiveBot - –í–∞—à –≥–∏–¥ –ø–æ –ë—É–¥–∞–ø–µ—à—Ç—É")
    DEFAULT_PROMO_MESSAGE = os.getenv("DEFAULT_PROMO_MESSAGE", 
                                      "üì¢ –°–æ–∑–¥–∞—Ç—å –ø—É–±–ª–∏–∫–∞—Ü–∏—é: https://t.me/TrixLiveBot\n"
                                      "üèÜ –õ—É—á—à–∏–π –∫–∞–Ω–∞–ª –ë—É–¥–∞–ø–µ—à—Ç–∞: https://t.me/snghu")
    
    # ============= –õ–ò–ú–ò–¢–´ =============
    
    MAX_PHOTOS_PIAR = int(os.getenv("MAX_PHOTOS_PIAR", "3"))
    MAX_DISTRICTS_PIAR = int(os.getenv("MAX_DISTRICTS_PIAR", "3"))
    MAX_MESSAGE_LENGTH = int(os.getenv("MAX_MESSAGE_LENGTH", "4096"))
    
    # ============= –ò–ì–†–û–í–´–ï –ù–ê–°–¢–†–û–ô–ö–ò =============
    
    GAME_VERSIONS = ['try', 'need', 'more']
    DEFAULT_GAME_INTERVAL = 60  # –º–∏–Ω—É—Ç –º–µ–∂–¥—É –ø–æ–ø—ã—Ç–∫–∞–º–∏
    MAX_ROLL_NUMBER = 9999
    MIN_ROLL_WINNERS = 1
    MAX_ROLL_WINNERS = 5
    
    # ============= –§–ò–õ–¨–¢–†–ê–¶–ò–Ø =============
    
    # –ó–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–µ –¥–æ–º–µ–Ω—ã
    BANNED_DOMAINS = [
        "bit.ly", "tinyurl.com", "cutt.ly", "goo.gl",
        "shorturl.at", "ow.ly", "is.gd", "buff.ly"
    ]
    
    # ============= –ú–ï–¢–û–î–´ –ö–õ–ê–°–°–ê =============
    
    @classmethod
    def is_admin(cls, user_id: int) -> bool:
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º"""
        if not cls.ADMIN_IDS:  # –õ–µ–Ω–∏–≤–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
            cls._init_ids()
        return user_id in cls.ADMIN_IDS
    
    @classmethod
    def is_moderator(cls, user_id: int) -> bool:
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º –∏–ª–∏ –∞–¥–º–∏–Ω–æ–º"""
        if not cls.ADMIN_IDS and not cls.MODERATOR_IDS:  # –õ–µ–Ω–∏–≤–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
            cls._init_ids()
        return user_id in cls.MODERATOR_IDS or cls.is_admin(user_id)
    
    @classmethod
    def get_all_moderators(cls) -> Set[int]:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤—Å–µ—Ö –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤ –∏ –∞–¥–º–∏–Ω–æ–≤"""
        if not cls.ADMIN_IDS and not cls.MODERATOR_IDS:
            cls._init_ids()
        return cls.ADMIN_IDS.union(cls.MODERATOR_IDS)
    
    @classmethod
    def add_admin(cls, user_id: int) -> bool:
        """–î–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""
        if not cls.ADMIN_IDS:
            cls._init_ids()
        if user_id not in cls.ADMIN_IDS:
            cls.ADMIN_IDS.add(user_id)
            return True
        return False
    
    @classmethod
    def remove_admin(cls, user_id: int) -> bool:
        """–£–¥–∞–ª—è–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""
        if not cls.ADMIN_IDS:
            cls._init_ids()
        if user_id in cls.ADMIN_IDS:
            cls.ADMIN_IDS.remove(user_id)
            return True
        return False
    
    @classmethod
    def add_moderator(cls, user_id: int) -> bool:
        """–î–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤–æ–≥–æ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞"""
        if not cls.MODERATOR_IDS:
            cls._init_ids()
        if user_id not in cls.MODERATOR_IDS and user_id not in cls.ADMIN_IDS:
            cls.MODERATOR_IDS.add(user_id)
            return True
        return False
    
    @classmethod
    def remove_moderator(cls, user_id: int) -> bool:
        """–£–¥–∞–ª—è–µ—Ç –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞"""
        if not cls.MODERATOR_IDS:
            cls._init_ids()
        if user_id in cls.MODERATOR_IDS:
            cls.MODERATOR_IDS.remove(user_id)
            return True
        return False
    
    @classmethod
    def validate_config(cls) -> List[str]:
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
        errors = []
        
        if not cls.BOT_TOKEN:
            errors.append("‚ùå BOT_TOKEN –Ω–µ –∑–∞–¥–∞–Ω")
        
        if not cls.ADMIN_IDS:
            cls._init_ids()
            if not cls.ADMIN_IDS:
                errors.append("‚ö†Ô∏è ADMIN_IDS –Ω–µ –∑–∞–¥–∞–Ω—ã")
        
        try:
            int(cls.TARGET_CHANNEL_ID)
            int(cls.MODERATION_GROUP_ID) 
        except (ValueError, TypeError):
            errors.append("‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ ID –∫–∞–Ω–∞–ª–æ–≤")
        
        return errors
    
    @classmethod
    def get_config_info(cls) -> str:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
        if not cls.ADMIN_IDS:
            cls._init_ids()
            
        return f"""‚öôÔ∏è **–ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø –ë–û–¢–ê**

**üëë –ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞:**
‚Ä¢ –ê–¥–º–∏–Ω–æ–≤: {len(cls.ADMIN_IDS)}
‚Ä¢ –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤: {len(cls.MODERATOR_IDS)}

**üì± –ö–∞–Ω–∞–ª—ã:**
‚Ä¢ –û—Å–Ω–æ–≤–Ω–æ–π: {cls.TARGET_CHANNEL_ID}
‚Ä¢ –ú–æ–¥–µ—Ä–∞—Ü–∏—è: {cls.MODERATION_GROUP_ID}
‚Ä¢ –ê–∫—Ç—É–∞–ª—å–Ω–æ–µ: {cls.CHAT_FOR_ACTUAL}

**üéÆ –ò–≥—Ä—ã:**
‚Ä¢ –í–µ—Ä—Å–∏–∏: {', '.join(cls.GAME_VERSIONS)}
‚Ä¢ –ò–Ω—Ç–µ—Ä–≤–∞–ª: {cls.DEFAULT_GAME_INTERVAL} –º–∏–Ω
‚Ä¢ –ú–∞–∫—Å. –Ω–æ–º–µ—Ä: {cls.MAX_ROLL_NUMBER}

**‚öôÔ∏è –õ–∏–º–∏—Ç—ã:**
‚Ä¢ –ö—É–ª–¥–∞—É–Ω: {cls.COOLDOWN_SECONDS} —Å–µ–∫
‚Ä¢ –ú–∞–∫—Å. —Ñ–æ—Ç–æ: {cls.MAX_PHOTOS_PIAR}
‚Ä¢ –î–ª–∏–Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è: {cls.MAX_MESSAGE_LENGTH}"""

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º ID –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
Config._init_ids()

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ
if __name__ != "__main__":
    config_errors = Config.validate_config()
    if config_errors:
        print("üö® –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:")
        for error in config_errors:
            print(f"  {error}")
