# -*- coding: utf-8 -*-
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes
import logging

logger = logging.getLogger(__name__)

# -------------------- –ö–û–ú–ê–ù–î–´ --------------------

async def social_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏ TRIX"""
    
    keyboard = [
        [InlineKeyboardButton("üß¢ Instagram", url="https://www.instagram.com/budapesttrix?igsh=ZXlrNmo4NDdyN2Vz&utm_source=qr")],
        [InlineKeyboardButton("üî∑ Facebook Group", url="https://www.facebook.com/share/g/1EKwURtZ13/?mibextid=wwXIfr")],
        [InlineKeyboardButton("üåÄ Threads", url="https://www.threads.com/@budapesttrix?igshid=NTc4MTIwNjQ2YQ==")],
        [InlineKeyboardButton("ü´Ü Telegram DM", url="https://t.me/trixilvebot")],
        [InlineKeyboardButton("üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="menu:back")]
    ]
    
    text = (
        "üì± **–°–û–¶–ò–ê–õ–¨–ù–´–ï –°–ï–¢–ò TRIX**\n\n"
        "–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ –Ω–∞–º –≤ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç—è—Ö:\n\n"
        
        "üß¢ **Instagram**\n"
        "–§–æ—Ç–æ, stories, –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏\n"
        "@budapesttrix\n\n"
        
        "üî∑ **Facebook Group**\n"
        "–û–±—Å—É–∂–¥–µ–Ω–∏—è, –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è, –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞\n\n"
        
        "üåÄ **Threads**\n"
        "–ö–æ—Ä–æ—Ç–∫–∏–µ –ø–æ—Å—Ç—ã –∏ –æ–±—â–µ–Ω–∏–µ\n"
        "@budapesttrix\n\n"
        
        "ü´Ü **Telegram DM**\n"
        "–õ–∏—á–Ω–∞—è —Å–≤—è–∑—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–µ–π\n\n"
        
        "üëÜ –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É —á—Ç–æ–±—ã –ø–µ—Ä–µ–π—Ç–∏"
    )
    
    if update.callback_query:
        await update.callback_query.edit_message_text(
            text=text,
            reply_markup=InlineKeyboardMarkup(keyboard),
            parse_mode='Markdown'
        )
    else:
        await update.message.reply_text(
            text,
            reply_markup=InlineKeyboardMarkup(keyboard),
            parse_mode='Markdown'
        )


async def giveaway_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–æ–∑—ã–≥—Ä—ã—à–∞—Ö"""
    
    keyboard = [
        [InlineKeyboardButton("üéÅ –£—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ", url="https://t.me/trixvault")],
        [InlineKeyboardButton("üì¢ –ö–∞–Ω–∞–ª —Å —Ä–æ–∑—ã–≥—Ä—ã—à–∞–º–∏", url="https://t.me/trixvault")],
        [InlineKeyboardButton("üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="menu:back")]
    ]
    
    text = (
        "üéÅ **–†–û–ó–´–ì–†–´–®–ò TRIX**\n\n"
        "üéâ –†–µ–≥—É–ª—è—Ä–Ω–æ –ø—Ä–æ–≤–æ–¥–∏–º —Ä–æ–∑—ã–≥—Ä—ã—à–∏ –ø—Ä–∏–∑–æ–≤ –¥–ª—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –Ω–∞—à–µ–≥–æ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞!\n\n"
        
        "üéØ **–ö–∞–∫ —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å:**\n"
        "1Ô∏è‚É£ –ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª\n"
        "2Ô∏è‚É£ –°–ª–µ–¥–∏—Ç–µ –∑–∞ –æ–±—ä—è–≤–ª–µ–Ω–∏—è–º–∏ –æ —Ä–æ–∑—ã–≥—Ä—ã—à–∞—Ö\n"
        "3Ô∏è‚É£ –í—ã–ø–æ–ª–Ω—è–π—Ç–µ —É—Å–ª–æ–≤–∏—è —É—á–∞—Å—Ç–∏—è\n"
        "4Ô∏è‚É£ –ñ–¥–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤!\n\n"
        
        "üèÜ **–ü—Ä–∏–∑—ã:**\n"
        "‚Ä¢ –ü–æ–¥–∞—Ä–æ—á–Ω—ã–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã\n"
        "‚Ä¢ –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ —É—Å–ª—É–≥–∏ –æ—Ç –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤\n"
        "‚Ä¢ –≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã\n"
        "‚Ä¢ –ò –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ!\n\n"
        
        "üì¢ **–¢–µ–∫—É—â–∏–µ —Ä–æ–∑—ã–≥—Ä—ã—à–∏:**\n"
        "–°–º–æ—Ç—Ä–∏—Ç–µ –∞–∫—Ç—É–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –Ω–∞—à–µ–º –∫–∞–Ω–∞–ª–µ\n\n"
        
        "üí° –ë–æ–ª—å—à–µ —É—á–∞—Å—Ç–≤—É–µ—à—å –≤ –∂–∏–∑–Ω–∏ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞ = –±–æ–ª—å—à–µ —à–∞–Ω—Å–æ–≤ –≤—ã–∏–≥—Ä–∞—Ç—å!\n\n"
        
        "üçÄ –£–¥–∞—á–∏!"
    )
    
    if update.callback_query:
        await update.callback_query.edit_message_text(
            text=text,
            reply_markup=InlineKeyboardMarkup(keyboard),
            parse_mode='Markdown'
        )
    else:
        await update.message.reply_text(
            text,
            reply_markup=InlineKeyboardMarkup(keyboard),
            parse_mode='Markdown'
        )


# -------------------- –î–ò–ù–ê–ú–ò–ß–ï–°–ö–û–ï –ú–ï–ù–Æ --------------------

MENU_ACTIONS = {
    "menu:social": social_command,
    "menu:giveaway": giveaway_command
}


async def menu_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é"""
    query = update.callback_query
    await query.answer()
    
    if query.data == "menu:back":
        text = "üîπ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é TRIX:\n\n–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª:"
        keyboard = [
            [InlineKeyboardButton("üì± –°–æ—Ü—Å–µ—Ç–∏", callback_data="menu:social")],
            [InlineKeyboardButton("üéÅ –†–æ–∑—ã–≥—Ä—ã—à–∏", callback_data="menu:giveaway")],
            # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–µ –ø—É–Ω–∫—Ç—ã –º–µ–Ω—é
        ]
        await query.edit_message_text(
            text=text,
            reply_markup=InlineKeyboardMarkup(keyboard)
        )
    elif query.data in MENU_ACTIONS:
        # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—ã–∑—ã–≤–∞–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∫–æ–º–∞–Ω–¥—É
        await MENU_ACTIONS[query.data](update, context)


# -------------------- –≠–ö–°–ü–û–†–¢ --------------------

__all__ = ['social_command', 'giveaway_command', 'menu_callback']
