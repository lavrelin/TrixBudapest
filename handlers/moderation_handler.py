async def process_reject_with_reason(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """Process rejection with reason - –ò–°–ü–†–ê–í–õ–ï–ù–û: –¥–µ—Ç–∞–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ"""
    try:
        reason = update.message.text.strip()
        post_id = context.user_data.get('mod_post_id')
        user_id = context.user_data.get('mod_post_user_id')
        
        # –î–ï–¢–ê–õ–¨–ù–û–ï –õ–û–ì–ò–†–û–í–ê–ù–ò–ï
        logger.info(f"=" * 50)
        logger.info(f"REJECT WITH REASON - START")
        logger.info(f"Moderator: {update.effective_user.id} (@{update.effective_user.username})")
        logger.info(f"Post ID: {post_id}")
        logger.info(f"Target User ID: {user_id}")
        logger.info(f"Reason: {reason[:100]}")
        logger.info(f"Context data: {context.user_data}")
        logger.info(f"=" * 50)
        
        if not post_id or not user_id:
            logger.error(f"‚ùå Missing data - post_id: {post_id}, user_id: {user_id}")
            await update.message.reply_text("‚ùå –û—à–∏–±–∫–∞: –¥–∞–Ω–Ω—ã–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ")
            return
        
        if not reason or len(reason) < 5:
            await update.message.reply_text("‚ùå –ü—Ä–∏—á–∏–Ω–∞ —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∞—è (–º–∏–Ω–∏–º—É–º 5 —Å–∏–º–≤–æ–ª–æ–≤)")
            return
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ—Å—Ç–∞
        try:
            from services.db import db
            from models import Post, PostStatus
            from sqlalchemy import select
            
            async with db.get_session() as session:
                result = await session.execute(
                    select(Post).where(Post.id == post_id)
                )
                post = result.scalar_one_or_none()
                
                if not post:
                    logger.error(f"‚ùå Post {post_id} not found in database")
                    await update.message.reply_text(f"‚ùå –ü–æ—Å—Ç {post_id} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ")
                    return
                
                post.status = PostStatus.REJECTED
                await session.commit()
                logger.info(f"‚úÖ Post {post_id} status updated to REJECTED")
                
        except Exception as db_error:
            logger.error(f"‚ùå Database error: {db_error}", exc_info=True)
            await update.message.reply_text(f"‚ùå –û—à–∏–±–∫–∞ –ë–î: {str(db_error)[:100]}")
            return
        
        # –ü–†–û–í–ï–†–Ø–ï–ú –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        logger.info(f"üì§ Attempting to send rejection notification to user {user_id}...")
        
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            try:
                chat_info = await context.bot.get_chat(user_id)
                logger.info(f"‚úÖ User {user_id} chat accessible: {chat_info.type}")
            except Exception as check_error:
                logger.warning(f"‚ö†Ô∏è Cannot check user {user_id} chat: {check_error}")
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            user_message = (
                f"‚ùå –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞\n\n"
                f"üìù –ü—Ä–∏—á–∏–Ω–∞:\n{reason}\n\n"
                f"üí° –í—ã –º–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –∑–∞—è–≤–∫—É, —É—á—Ç—è —É–∫–∞–∑–∞–Ω–Ω—ã–µ –∑–∞–º–µ—á–∞–Ω–∏—è.\n\n"
                f"–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é."
            )
            
            logger.info(f"üì§ Sending rejection message to user {user_id}...")
            
            # –û–¢–ü–†–ê–í–õ–Ø–ï–ú –°–û–û–ë–©–ï–ù–ò–ï
            sent_message = await context.bot.send_message(
                chat_id=user_id,
                text=user_message
            )
            
            logger.info(f"‚úÖ‚úÖ‚úÖ SUCCESS! Rejection sent to user {user_id}, message_id: {sent_message.message_id}")
            
            # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—É
            mod_confirmation = (
                f"‚ùå –ó–ê–Ø–í–ö–ê –û–¢–ö–õ–û–ù–ï–ù–ê\n\n"
                f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ID: {user_id}\n"
                f"‚úâÔ∏è –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ: –û–¢–ü–†–ê–í–õ–ï–ù–û\n"
                f"üìù –ü—Ä–∏—á–∏–Ω–∞: {reason[:100]}\n"
                f"üìä Post ID: {post_id}"
            )
            
            await update.message.reply_text(mod_confirmation)
            logger.info(f"‚úÖ Moderator {update.effective_user.id} notified about successful rejection")
            
        except Exception as notify_error:
            logger.error(f"‚ùå‚ùå‚ùå FAILED to notify user {user_id}: {notify_error}", exc_info=True)
            
            # –ü–æ–¥—Ä–æ–±–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—É
            error_str = str(notify_error).lower()
            
            if "blocked" in error_str:
                reason_text = "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –±–æ—Ç–∞"
            elif "not found" in error_str or "chat not found" in error_str:
                reason_text = "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ –∑–∞–ø—É—Å–∫–∞–ª –±–æ—Ç–∞"
            elif "deactivated" in error_str:
                reason_text = "–ê–∫–∫–∞—É–Ω—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω"
            elif "forbidden" in error_str:
                reason_text = "–ë–æ—Ç –Ω–µ –º–æ–∂–µ—Ç –ø–∏—Å–∞—Ç—å —ç—Ç–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é"
            else:
                reason_text = str(notify_error)[:150]
            
            mod_warning = (
                f"‚ö†Ô∏è –ó–ê–Ø–í–ö–ê –û–¢–ö–õ–û–ù–ï–ù–ê, –ù–û...\n\n"
                f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ID: {user_id}\n"
                f"‚ùå –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ: –ù–ï –î–û–°–¢–ê–í–õ–ï–ù–û\n"
                f"üìù –ü—Ä–∏—á–∏–Ω–∞: {reason[:100]}\n"
                f"üìä Post ID: {post_id}\n\n"
                f"üö´ –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: {reason_text}\n\n"
                f"üí° –í–æ–∑–º–æ–∂–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è:\n"
                f"‚Ä¢ –ü–æ–ø—Ä–æ—Å–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞–ø–∏—Å–∞—Ç—å /start –±–æ—Ç—É\n"
                f"‚Ä¢ –°–≤—è–∂–∏—Ç–µ—Å—å —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –Ω–∞–ø—Ä—è–º—É—é –≤ —á–∞—Ç–µ\n"
                f"‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å ID"
            )
            
            await update.message.reply_text(mod_warning)
            logger.warning(f"‚ö†Ô∏è Moderator notified about failed rejection notification")
        
        # –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç
        context.user_data.pop('mod_post_id', None)
        context.user_data.pop('mod_post_user_id', None)
        context.user_data.pop('mod_waiting_for', None)
        
        logger.info(f"‚úÖ Rejection process completed for post {post_id}")
        logger.info(f"=" * 50)
        
    except Exception as e:
        logger.error(f"‚ùå CRITICAL ERROR in rejection process: {e}", exc_info=True)
        await update.message.reply_text(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {str(e)[:200]}")
