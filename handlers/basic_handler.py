# -*- coding: utf-8 -*-
from telegram import Update
from telegram.ext import ContextTypes
from config import Config
from datetime import datetime
import logging

logger = logging.getLogger(__name__)

# –í—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–≤ –ø–∞–º—è—Ç–∏)
user_data_cache = {}
lottery_participants = {}

def update_user_activity(user_id: int, username: str = None):
    """–û–±–Ω–æ–≤–ª—è–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    if user_id not in user_data_cache:
        user_data_cache[user_id] = {
            'id': user_id,
            'username': username or f'ID_{user_id}',
            'join_date': datetime.now(),
            'last_activity': datetime.now(),
            'message_count': 0,
            'banned': False,
            'muted_until': None
        }
    else:
        user_data_cache[user_id]['last_activity'] = datetime.now()
        if username:
            user_data_cache[user_id]['username'] = username
    
    user_data_cache[user_id]['message_count'] += 1

def get_user_by_username(username: str):
    """–ü–æ–ª—É—á–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ username"""
    for uid, data in user_data_cache.items():
        if data['username'].lower() == username.lower():
            return data
    return None

def get_user_by_id(user_id: int):
    """–ü–æ–ª—É—á–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ ID"""
    return user_data_cache.get(user_id)

def is_user_banned(user_id: int) -> bool:
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∑–∞–±–∞–Ω–µ–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"""
    return user_data_cache.get(user_id, {}).get('banned', False)

def is_user_muted(user_id: int) -> bool:
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∑–∞–º—É—á–µ–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"""
    if user_id not in user_data_cache:
        return False
    
    muted_until = user_data_cache[user_id].get('muted_until')
    if not muted_until:
        return False
    
    if datetime.now() < muted_until:
        return True
    else:
        user_data_cache[user_id]['muted_until'] = None
        return False

async def id_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ–∫–∞–∑–∞—Ç—å ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ —á–∞—Ç–∞"""
    user = update.effective_user
    chat = update.effective_chat
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
    update_user_activity(user.id, user.username)
    
    text = f"üÜî **–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± ID:**\n\nüë§ –í–∞—à ID: `{user.id}`"
    
    if chat.type != 'private':
        text += f"\nüí¨ ID —á–∞—Ç–∞: `{chat.id}`\nüìù –¢–∏–ø —á–∞—Ç–∞: {chat.type}"
        if chat.title:
            text += f"\nüè∑Ô∏è –ù–∞–∑–≤–∞–Ω–∏–µ: {chat.title}"
    
    await update.message.reply_text(text, parse_mode='Markdown')

async def whois_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ (–º–æ–¥–µ—Ä–∞—Ç–æ—Ä—ã)"""
    if not Config.is_moderator(update.effective_user.id):
        await update.message.reply_text("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã")
        return
    
    if not context.args:
        await update.message.reply_text(
            "üìù **–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã /whois:**\n\n"
            "‚Ä¢ `/whois @username` - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ username\n"
            "‚Ä¢ `/whois 123456789` - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ ID\n"
            "‚Ä¢ –û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ: `/whois`",
            parse_mode='Markdown'
        )
        return
    
    # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if update.message.reply_to_message:
        target_user = update.message.reply_to_message.from_user
        user_info = get_user_by_id(target_user.id)
        if not user_info:
            user_info = {
                'id': target_user.id,
                'username': target_user.username or f'ID_{target_user.id}',
                'join_date': datetime.now(),
                'last_activity': datetime.now(),
                'message_count': 0,
                'banned': False,
                'muted_until': None
            }
    else:
        target = context.args[0]
        user_info = None
        
        if target.startswith('@'):
            username = target[1:]
            user_info = get_user_by_username(username)
        elif target.isdigit():
            user_id = int(target)
            user_info = get_user_by_id(user_id)
    
    if user_info:
        muted_status = "–î–∞" if is_user_muted(user_info['id']) else "–ù–µ—Ç"
        
        text = f"""üë§ **–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ:**

üÜî ID: `{user_info['id']}`
üë§ Username: @{user_info['username']}
üìÖ –ü–µ—Ä–≤–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: {user_info['join_date'].strftime('%d.%m.%Y %H:%M')}
‚è∞ –ü–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: {user_info['last_activity'].strftime('%d.%m.%Y %H:%M')}
üí¨ –°–æ–æ–±—â–µ–Ω–∏–π: {user_info['message_count']}
üö´ –°—Ç–∞—Ç—É—Å –±–∞–Ω–∞: {'–ó–∞–±–∞–Ω–µ–Ω' if user_info.get('banned') else '–ê–∫—Ç–∏–≤–µ–Ω'}
üîá –ú—É—Ç: {muted_status}"""
    else:
        text = "‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∫—ç—à–µ –±–æ—Ç–∞"
    
    await update.message.reply_text(text, parse_mode='Markdown')

async def join_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ —Ä–æ–∑—ã–≥—Ä—ã—à—É"""
    user_id = update.effective_user.id
    username = update.effective_user.username or f"ID_{user_id}"
    
    update_user_activity(user_id, update.effective_user.username)
    
    if is_user_banned(user_id):
        await update.message.reply_text("‚ùå –í—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –∏ –Ω–µ –º–æ–∂–µ—Ç–µ —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å")
        return
    
    if user_id in lottery_participants:
        await update.message.reply_text(f"üé≤ @{username}, –≤—ã —É–∂–µ —É—á–∞—Å—Ç–≤—É–µ—Ç–µ –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ!")
        return
    
    lottery_participants[user_id] = {
        'username': username,
        'joined_at': datetime.now()
    }
    
    await update.message.reply_text(
        f"üéâ @{username}, –≤—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª–∏—Å—å –∫ —Ä–æ–∑—ã–≥—Ä—ã—à—É!\n"
        f"üë• –£—á–∞—Å—Ç–Ω–∏–∫–æ–≤: {len(lottery_participants)}"
    )

async def participants_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–°–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Ä–æ–∑—ã–≥—Ä—ã—à–∞"""
    if not lottery_participants:
        await update.message.reply_text("üé≤ –ü–æ–∫–∞ –Ω–µ—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Ä–æ–∑—ã–≥—Ä—ã—à–∞")
        return
    
    text = f"üë• **–£—á–∞—Å—Ç–Ω–∏–∫–∏ —Ä–æ–∑—ã–≥—Ä—ã—à–∞ ({len(lottery_participants)}):**\n\n"
    
    for i, (user_id, data) in enumerate(lottery_participants.items(), 1):
        text += f"{i}. @{data['username']}\n"
    
    await update.message.reply_text(text, parse_mode='Markdown')

async def report_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ–∂–∞–ª–æ–≤–∞—Ç—å—Å—è –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    if not context.args and not update.message.reply_to_message:
        await update.message.reply_text(
            "üìù **–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã /report:**\n\n"
            "‚Ä¢ `/report @username –ø—Ä–∏—á–∏–Ω–∞` - –∂–∞–ª–æ–±–∞ –ø–æ username\n"
            "‚Ä¢ `/report –ø—Ä–∏—á–∏–Ω–∞` - –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞—Ä—É—à–∏—Ç–µ–ª—è\n\n"
            "üí° –û–ø–∏—à–∏—Ç–µ —Å—É—Ç—å –Ω–∞—Ä—É—à–µ–Ω–∏—è",
            parse_mode='Markdown'
        )
        return
    
    reporter = update.effective_user
    update_user_activity(reporter.id, reporter.username)
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ü–µ–ª—å –∂–∞–ª–æ–±—ã
    if update.message.reply_to_message:
        target_user = update.message.reply_to_message.from_user
        target = f"@{target_user.username or target_user.first_name} (ID: {target_user.id})"
        reason = ' '.join(context.args) if context.args else "–ù–µ —É–∫–∞–∑–∞–Ω–∞"
    else:
        target = context.args[0] if context.args else "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"
        reason = ' '.join(context.args[1:]) if len(context.args) > 1 else "–ù–µ —É–∫–∞–∑–∞–Ω–∞"
    
    report_text = f"""üö® **–ù–û–í–ê–Ø –ñ–ê–õ–û–ë–ê**

üë§ **–û—Ç:** @{reporter.username or '–±–µ–∑_username'} (ID: {reporter.id})
üéØ **–ù–∞:** {target}
üìù **–ü—Ä–∏—á–∏–Ω–∞:** {reason}
üìÖ **–í—Ä–µ–º—è:** {datetime.now().strftime('%d.%m.%Y %H:%M')}
üí¨ **–ß–∞—Ç:** {update.effective_chat.title or '–õ–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è'}"""
    
    try:
        await context.bot.send_message(
            chat_id=Config.MODERATION_GROUP_ID,
            text=report_text,
            parse_mode='Markdown'
        )
        
        await update.message.reply_text(
            "‚úÖ **–ñ–∞–ª–æ–±–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞–º!**\n\n"
            "üìã –í–∞—à–∞ –∂–∞–ª–æ–±–∞ –±—É–¥–µ—Ç —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∞ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è\n"
            "üîç –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä—ã –ø—Ä–æ–≤–µ—Ä—è—Ç —Å–∏—Ç—É–∞—Ü–∏—é –∏ –ø—Ä–∏–º—É—Ç –º–µ—Ä—ã",
            parse_mode='Markdown'
        )
        
    except Exception as e:
        logger.error(f"Error sending report: {e}")
        await update.message.reply_text(
            "‚ùå **–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∂–∞–ª–æ–±—ã**\n\n"
            "üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –Ω–∞–ø—Ä—è–º—É—é"
        )

async def help_extended_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –ø–æ–º–æ—â—å"""
    help_text = """üÜò **–ü–û–î–†–û–ë–ù–ê–Ø –ü–û–ú–û–©–¨ –ü–û –ë–û–¢–£**

**üì± –û–°–ù–û–í–ù–´–ï –ö–û–ú–ê–ù–î–´:**
‚Ä¢ `/start` - –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞ –∏ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
‚Ä¢ `/help` - —ç—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞  
‚Ä¢ `/id` - –ø–æ–∫–∞–∑–∞—Ç—å –≤–∞—à ID –∏ ID —á–∞—Ç–∞
‚Ä¢ `/join` - –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ —Ä–æ–∑—ã–≥—Ä—ã—à—É
‚Ä¢ `/participants` - —Å–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Ä–æ–∑—ã–≥—Ä—ã—à–∞
‚Ä¢ `/report @user` - –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å—Å—è –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

**üéÆ –ò–ì–†–û–í–´–ï –ö–û–ú–ê–ù–î–´:**

**–í–µ—Ä—Å–∏–∏ –∏–≥—Ä:** try, need, more
*–ó–∞–º–µ–Ω–∏—Ç–µ {version} –Ω–∞ try, need –∏–ª–∏ more*

**–î–ª—è –≤—Å–µ—Ö –∏–≥—Ä–æ–∫–æ–≤:**
‚Ä¢ `/{version}slovo –æ—Ç–≤–µ—Ç` - —É–≥–∞–¥–∞—Ç—å —Å–ª–æ–≤–æ –≤ –∫–æ–Ω–∫—É—Ä—Å–µ
‚Ä¢ `/{version}info` - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ–∫—É—â–µ–º –∫–æ–Ω–∫—É—Ä—Å–µ
‚Ä¢ `/{version}page` - –≥–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∏–≥—Ä—ã
‚Ä¢ `/{version}roll` - –ø–æ–ª—É—á–∏—Ç—å –Ω–æ–º–µ—Ä –¥–ª—è —Ä–æ–∑—ã–≥—Ä—ã—à–∞
‚Ä¢ `/{version}myroll` - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–≤–æ–π –Ω–æ–º–µ—Ä
‚Ä¢ `/{version}game` - —Å–ø—Ä–∞–≤–∫–∞ –¥–ª—è –∏–≥—Ä–æ–∫–æ–≤

**üîó –°–°–´–õ–ö–ò:**
‚Ä¢ `/trixlinks` - –≤—Å–µ –ø–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞

**üõ°Ô∏è –î–õ–Ø –ú–û–î–ï–†–ê–¢–û–†–û–í:**
‚Ä¢ `/ban @user` - –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
‚Ä¢ `/mute @user 10m` - –∑–∞–º—É—Ç–∏—Ç—å –Ω–∞ –≤—Ä–µ–º—è
‚Ä¢ `/stats` - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞
‚Ä¢ `/admcom` - –≤—Å–µ –∞–¥–º–∏–Ω—Å–∫–∏–µ –∫–æ–º–∞–Ω–¥—ã

**üí° –°–û–í–ï–¢–´:**
‚Ä¢ –ë–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ –∞–¥–º–∏–Ω—Å–∫–∏—Ö –∫–æ–º–∞–Ω–¥ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –ª–∏—á–∫–µ
‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ä–µ–ø–ª–∞–π –¥–ª—è –∫–æ–º–∞–Ω–¥ –º–æ–¥–µ—Ä–∞—Ü–∏–∏
‚Ä¢ –°–ª–µ–¥–∏—Ç–µ –∑–∞ –æ–±—ä—è–≤–ª–µ–Ω–∏—è–º–∏ –æ –∫–æ–Ω–∫—É—Ä—Å–∞—Ö –≤ –∫–∞–Ω–∞–ª–µ

**üìû –ü–û–î–î–ï–†–ñ–ö–ê:**
–ï—Å–ª–∏ —á—Ç–æ-—Ç–æ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º"""
    
    await update.message.reply_text(help_text, parse_mode='Markdown')
